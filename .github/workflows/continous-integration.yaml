# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: Build Step

on:
  push:
    branches: ['master']
#   pull_request:
#     branches: [ "master" ]

jobs:
  build:
    runs-on: ubuntu-latest
    defaults:
       run:
         working-directory: ./awesome-compose-tenable/
    strategy:
      matrix:
        node-version: [14.20.0]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
          cache-dependency-path: './react-java-mysql/frontend/package-lock.json'
      - run: cd ./react-java-mysql/frontend
      - run: npm ci
      - run: npm run build --if-present

  test-stage:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Running Tests
        uses: actions/checkout@v3
      - run: echo "runnigngngngngn"

  # build-and-push-docker-image:
  #   name: Build Docker image and push to repositories
  #   # run only when code is compiling and tests are passing
  #   runs-on: ubuntu-latest
  #   needs: ['build', 'test-stage']

  #   # steps to perform in job
  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v3

  #     # setup Docker buld action
  #     - name: Set up Docker Buildx
  #       id: buildx
  #       uses: docker/setup-buildx-action@v2

  #     - name: Login to DockerHub
  #       uses: docker/login-action@v2
  #       with:
  #         username: ${{ secrets.DOCKER_USER }}
  #         password: ${{ secrets.DOCKER_PASSWORD }}

  #     # - name: Login to Github Packages
  #     #   uses: docker/login-action@v2
  #     #   with:
  #     #     registry: ghcr.io
  #     #     username: ${{ github.actor }}
  #     #     password: ${{ secrets.G_TOKEN }}

  #     - name: Build image and push to Docker Hub and GitHub Container Registry
  #       uses: docker/build-push-action@v2
  #       with:
  #         # relative path to the place where source code with Dockerfile is located
  #         context: ./awesome-compose-tenable/react-java-mysql
  #         # Note: tags has to be all lower-case
  #         tags: |
  #           prasad1825/awesome-compose-tenable:${{ github.sha }} 
            
  #         # build on feature branches, push only on main branch
  #         push: ${{ github.ref == 'refs/heads/master' }}

  #     - name: Image digest
  #       run: echo ${{ steps.docker_build.outputs.digest }}

  build-and-push-docker-image:
    name: Build Docker image and push to repositories
    runs-on: ubuntu-latest
    needs: ['build', 'test-stage']

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      # setup Docker buld action
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USER }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # Build Docker images from Docker Compose file
      - name: Build image from Docker Compose
        run: docker-compose -f ./awesome-compose-tenable/react-java-mysql/docker-compose.yml build

      # Tag the images with git commit sha
      - name: Tag images with git commit sha
        run: |
          IMAGE_SHA=${{ github.sha }}
          docker tag awesome-compose-tenable_app prasad1825/awesome-compose-tenable:${IMAGE_SHA}
          
      # Push the Docker images to Docker Hub
      - name: Push Docker image to Docker Hub
        run: docker push prasad1825/awesome-compose-tenable:${IMAGE_SHA}


  update-manifest-stage:
    runs-on: ubuntu-latest
    needs: ['build-and-push-docker-image']
    steps:
      - uses: actions/checkout@v3
        with:
          repository: prasad1825/awesome-compose-tenable-infra
          ref: 'master'
          token: ${{ secrets.G_TOKEN }}
      - name: setup git config
        run: |
          git config --global user.email "pasu1825@gmail.com"
          git config --global user.name "prasad1825"
          echo ${{ github.sha }}
          sed -i "s#${{ github.actor }}.*#${{ github.actor }}/gitops01:${{ github.sha }}#g" deployment.yaml
          git add -A
          git commit -am "Update image for - ${{ github.sha }}"
      - run: echo ${{ github }}
      - run: git push origin master
